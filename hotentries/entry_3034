前回 は 、 Web アプリ の モックアップ （ ハリボテ ） を 作る ところ まで やり まし た 。 今回 は 、 Web アプリ の 機能 を 実装 し て み ましょ う ！ 　 学習 の 狙い データベース を 使っ た Web アプリ を 作っ て 、 データベース の 基本 操作 （ CRUD の ４つ ） を 練習 し て みよ う ！ CRUD   Create 　 追加   Read 　 　 取得   Update 　 更新 Delete 　 削除 　 説明 の 順番 について どういう 順番 で 説明 し たら 分かり やすい か ？ 検討 し て み た 。   まず 先 に 、 Web アプリ の 完成 見本 を 提示 し ます 。   続い て 、 作る 過程 を 説明 し ながら 、 各 プログラム の 意味 を 説明 し て み ます 。 　 作業 の 流れ ざっくり と 、 以下 の よう な 流れ で 作っ て いき ます 。 XAMPP を 起動 する 。 （ 参考   anond : 20181017191404   増田 式 プログラマー 養成 講座 　 その ６ 　 OOP の 種類 、 PHP の 準備 ） CodeIgniter を インストール する 。 （ 参考   anond : 20181022232327   増田 式 プログラマー 養成 講座 　 その ９ 　 MVC フレーム ワーク を 使っ て みよ う ） phpMyAdmin で データベース を 操作 する 。 （ 参考   anond : 20181024214133   増田 式 プログラマー 養成 講座 　 その 11 　 データベース を 使っ て みよ う ） Apache （ Web サーバー ソフト ） の 設定 を 変更 する 。 （ 今回 説明 ） Visual   Studio   Code 等 の ツール で プログラム を 書く 。 （ 次回 説明 ） ブラウザー で 動作 確認 する 。 　 XAMPP を 起動 さ せる （ 参考   anond : 20181017191404   増田 式 プログラマー 養成 講座 　 その ６ 　 OOP の 種類 、 PHP の 準備 ） 講座 その ６ を 参考 に し て 、 XAMPP を 起動 さ せ て 、 Apache と MySQL を スタート し て 下さい 。 「 XAMPP 」 （ ザンプ ） と は 、 Windows 上 で Web アプリ を 作る ため の ソフト です 。 インストール する と 、 Web サーバー ソフト 「 Apache 」 、 プログラミング 言語 「 PHP 」 、 データベース 「 MySQL 」 、 データベース 管理 ソフト 「 phpMyAdmin 」 など が すぐ に 使え ます 。 　 CodeIgniter を インストール する 。 （ 参考   anond : 20181022232327   増田 式 プログラマー 養成 講座 　 その ９ 　 MVC フレーム ワーク を 使っ て みよ う ） 講座 その ９ を 参考 に し て 、 XAMPP の 中 に CodeIgniter を インストール し て おき ます 。 フォルダ 名 は 前 と 同じ 「 waf 」 に し て おき ます 。 　 phpMyAdmin で データベース を 操作 する 。 （ 参考   anond : 20181024214133   増田 式 プログラマー 養成 講座 　 その 11 　 データベース を 使っ て みよ う ） 講座 その 11 を 参考 に し て 、 MySQL に Web アプリ 用 の データベース と テーブル を 作成 し て おき ます 。 　 データベース の 設定 講座 その 11 で 、 データベース の 練習 で 「 chat 」 という データベース を 作っ て み まし た 。 その とき 「 message 」 という テーブル を 作り まし た が 、 今回 Web アプリ で 使う テーブル として 新た に 「 talk 」 という テーブル を 作成 し ます 。 （ 補足 ： 前 に 作っ た テーブル 「 message 」 の 中 に 、 テーブル 名 と 同じ 「 message 」 という 名前 の カラム （ 列 ） を 作っ て まし た 。 これ でも 問題 ない ん だ けど 、 プログラム を 書く とき 、 テーブル 名 と カラム 名 を 混同 し ない よう に し たい ので 、 念 の ため 作り 変え とき ましょ う 。 ） 　   「 talk 」 テーブル を 新規 作成 する SQL で 「 talk 」 という テーブル を 作る 場合 、 以下 の よう な SQL 文 に なり ます 。 CREATE   TABLE   ` talk `   (　` id `   int ( 11 )   NOT   NULL ,　` create _ at `   datetime   NOT   NULL ,　` update _ at `   timestamp   NOT   NULL   DEFAULT   CURRENT _ TIMESTAMP   ON   UPDATE   CURRENT _ TIMESTAMP ,　` message `   text   NOT   NULL )   ENGINE = InnoDB   DEFAULT   CHARSET = utf 8 ;　 この SQL 文 を phpMyAdmin で 実行 すれ ば 「 talk 」 テーブル を 作れ ます 。 phpMyAdmin を 開く 。 データベース 「 chat 」 を 開く 。 （ 前 に 作っ た 「 message 」 テーブル は 使わ ない ので 削除 し て も OK ） phpMyAdmin 画面 の 上部 メニュー の 「 SQL 」 を クリック する 。   「 データベース   chat   上 で クエリ を 実行 する :」 の 空欄 に 上記 SQL 文 を コピー し て 実行 すれ ば 、 「 talk 」 という テーブル が できる 。 　 これ で データベース の 準備 が でき まし た 。 　 Apache の 設定 CodeIgniter で 使う 「 URL 」 の 表示 方法 を ちょっと 変更 し て おき たい ので 、 Apache （ Web サーバー ソフト ） の 設定 を 変更 し て おき ます 。 （ 「 URL 」 ＝ 情報 が どこ に ある の か を 示す インターネット 上 の 住所 ） （ Apache の 「 mod _ rewrite 」 という 仕組み によって 、 URL の 扱い 方 を 変更 し ます 。 ） 　 （ 例 ） 変更 前 ： 　 http :// localhost / waf / index . php / welcome /↓ 変更 後 ： 　 http :// localhost / waf / welcome / という よう に 、 URL の 中 に ある 「 / index . php 」 という 文字 列 を 表示 さ せ ない 設定 に し ます 。 　 Apache の 設定 ファイル 「. htaccess 」 Apache の 設定 は 「 . htaccess 」 という 名前 の 設定 ファイル を 用意 し て 変更 し ます 。 　 フォルダ ： 　 C :\ xampp \ htdocs \ waf 　 を 開く 。 「. htaccess 」 という ファイル を 作る 。 （「. htaccess . txt 」 という テキストファイル で は ない ので 注意 ！）「. htaccess 」 ファイル を 開い て 、 以下 の 内容 を コピペ し て 保存 する 。 RewriteEngine   OnRewriteCond   %{ REQUEST _ FILENAME }   !- fRewriteCond   %{ REQUEST _ FILENAME }   !- dRewriteRule   ^(.*)$   index . php /$ 1   [ L ]　（ 参考 ） CodeIgniter   の   URL   https :// codeigniter . jp / user _ guide / 3 / general / urls . html （ 参考 ） Apache   チュートリアル :   . htaccess   ファイル   https :// httpd . apache . org / docs / 2 . 4 / ja / howto / htaccess . html 「. htaccess 」 の 書き方 を 理解 する に は 、 「 正規 表現 」 という 仕組み の 知識 が 必要 です 。 まだ 「 正規 表現 」 を 勉強 し て ない 段階 で は 、 とりあえず コピペ し て 使っ て 下さい 。 　 Web アプリ 完成 見本 CodeIgniter で 、 設定 ファイル の 編集 MVC の パーツ （ Model 、 View 、 Controller ） の 用意 を 行ない ます 。 　 CodeIgniter の 設定 ファイル 「 config . php 」 の 編集 設定 ファイル の ある フォルダ ： 　 C :\ xampp \ htdocs \ waf \ application \ config \ 設定 ファイル ： 　 config . php 「 config . php 」 を IDE や エディター で 開い て 、 以下 の よう に 変更 する 。 $ config [' base _ url ']   =   ' http :// localhost / waf /';$ config [' index _ page ']   =   '';　 最初 は 、 $ config [' index _ page ']   =   ' index . php '; に なっ てる けど 、 「 index . php 」 を 削除 し て 、 「''」（ 空 ） に し て おく 。 　 CodeIgniter の データベース 設定 ファイル 「 databese . php 」 の 編集 設定 ファイル の ある フォルダ ： 　 C :\ xampp \ htdocs \ waf \ application \ config \ 設定 ファイル ： 　 databese . php 「 databese . php 」 を IDE や エディター で 開い て 、 以下 の よう に 変更 する 。 $ db [' default ']   =   array (　' dsn '   =>   '',　' hostname '   =>   ' localhost ',　' username '   =>   ' root ',　' password '   =>   '',　' database '   =>   ' chat ',　' dbdriver '   =>   ' mysqli ',（※ 上記 の よう に 、 MySQL の username と password は 「 root 」 （ 管理 者 ） の デフォルト 設定 を 使っ て ます 。 ） 　   Controller の 作成 設置 する フォルダ ： 　 C :\ xampp \ htdocs \ waf \ application \ controllers 設置 する ファイル ： 　 Welcome . php 上記 フォルダ の 中 に 「 Welcome . php 」 という ファイル を 作っ て 、 内容 を 以下 の よう に し ます 。 <? phpdefined (' BASEPATH ')   or   exit (' No   direct   script   access   allowed ');　 class   Welcome   extends   CI _ Controller {　 public   function   __ construct ()　{　　 parent ::__ construct ();　　$ this -> load -> model (' chat _ model ');　　$ this -> load -> helper (' url ');　　//   $ this -> output -> enable _ profiler ( true );   //   for   debug 　}　　//   初期 画面 　 public   function   index ()　{　　$ action   =   $ this -> input -> post (' action ');　　 if   ($ action   ==   ' add ')   {　　　$ message   =   $ this -> input -> post (' message ');　　　$ this -> chat _ model -> create _ message ($ message );　　}　　$ data [' talk ']   =   $ this -> chat _ model -> read _ message ();　　$ this -> load -> view (' welcome _ index ',   $ data );　}　　//   更新 画面 　 public   function   update ($ id   =   '')　{　　$ id   =   $ id   ?   $ id   :   $ this -> input -> post (' id ');   //   id   ->   segment   or   post 　　$ action   =   $ this -> input -> post (' action ');　　 if   ($ action   ==   ' update ')   {　　　$ message   =   $ this -> input -> post (' message ');　　　$ this -> chat _ model -> update _ message ($ id ,   $ message );　　}　　$ data [' talk ']   =   $ this -> chat _ model -> read _ message _ by _ id ($ id );　　$ this -> load -> view (' chat _ update ',   $ data );　}　　//   削除 画面 　 public   function   delete ($ id   =   '')　{　　$ id   =   $ id   ?   $ id   :   $ this -> input -> post (' id ');　　$ action   =   $ this -> input -> post (' action ');　　 if   ($ action   ==   ' delete ')   {　　　$ this -> chat _ model -> delete _ message ($ id );　　}　　$ data [' talk ']   =   $ this -> chat _ model -> read _ message _ by _ id ($ id );　　$ this -> load -> view (' chat _ delete ',   $ data );　}}　 View の 作成 設置 する フォルダ ： 　 C :\ xampp \ htdocs \ waf \ application \ views 設置 する ファイル ：    welcome _ index . php   chat _ update . php   chat _ delete . php 上記 フォルダ の 中 に 「 welcome _ index . php 」 「 chat _ update . php 」 「 chat _ delete . php 」 という ３つ の ファイル を 作っ て 、 内容 を 以下 の よう に し ます 。 　 View ファイル 「 welcome _ index . php 」 の 中身 <? php   defined (' BASEPATH ')   OR   exit (' No   direct   script   access   allowed ');   ?><! DOCTYPE   html >< html >　< head >　　< meta   charset =" utf - 8 ">　　< title > 増田 チャット </ title >　　< base   href ="<? php   echo   base _ url ();   ?>">　</ head >　< body >　　< h 1 > 増田 チャット </ h 1 >　　< h 2 > 新規 投稿 </ h 2 >　　< form   action =" welcome / index "   method =" post "   accept - charset =" utf - 8 ">　　　< label > メッセージ </ label >　　　< input   type =" text "   name =" message ">　　　< input   type =" hidden "   name =" action "   value =" add ">　　　< button > 投稿 する </ button >　　</ form >　　< h 2 > 投稿 一覧 </ h 2 >　　< table   border =" 1 "   cellpadding =" 5 "   cellspacing =" 0 "   bordercolor ="# CCCCFF ">　　　< tr >　　　　< th > No .</ th >　　　　< th > 投稿 日時 </ th >　　　　< th > メッセージ </ th >　　　　< th > 編集 </ th >　　　　< th > 削除 </ th >　　　</ tr >　　　<? php   if ( isset ($ talk )):   ?>　　　<? php   foreach ($ talk   as   $ item ):   ?>　　　< tr >　　　　< td ><? php   echo   $ item [' id '];   ?></ td >　　　　< td ><? php   echo   $ item [' create _ at '];   ?></ td >　　　　< td ><? php   echo   $ item [' message '];   ?></ td >　　　　< td >< a   href =" welcome / update /<? php   echo   $ item [' id '];   ?>"> 編集 </ a ></ td >　　　　< td >< a   href =" welcome / delete /<? php   echo   $ item [' id '];   ?>"> 削除 </ a ></ td >　　　</ tr >　　　<? php   endforeach ;   ?>　　　<? php   endif ;   ?>　　</ table >　</ body ></ html >　 View ファイル 「 chat _ update . php 」 の 中身 <? php   defined (' BASEPATH ')   or   exit (' No   direct   script   access   allowed ');?><! DOCTYPE   html >< html >　< head >　　< meta   charset =" utf - 8 ">　　< title > 増田 チャット </ title >　　< base   href ="<? php   echo   base _ url ();   ?>">　</ head >　< body >　　< h 1 > 増田 チャット </ h 1 >　　< h 2 > 編集 </ h 2 >　　< p > メッセージ を 変更 し て 「 更新 する 」 ボタン を 押し て ください 。 </ p >　　< form   action =" welcome / update "   method =" post "   accept - charset =" utf - 8 ">　　　< label > メッセージ </ label >　　　<? php   if   ( isset ($ talk )):   ?>　　　< input   type =" text "   name =" message "   value ="<? php   echo   $ talk [' message '];   ?>">　　　< input   type =" hidden "   name =" id "   value ="<? php   echo   $ talk [' id '];   ?>">　　　< input   type =" hidden "   name =" action "   value =" update ">　　　<? php   else :   ?>　　　< p >※ 該当 する メッセージ が あり ませ ん 。 </ p >　　　<? php   endif ;?>　　　< button > 更新 する </ button >　　</ form >　　< p >< a   href =" welcome / index "> 戻る </ a ></ p >　</ body ></ html >　 View ファイル 「 chat _ delete . php 」 の 中身 <? php   defined (' BASEPATH ')   or   exit (' No   direct   script   access   allowed ');?><! DOCTYPE   html >< html >　< head >　　< meta   charset =" utf - 8 ">　　< title > 増田 チャット </ title >　　< base   href ="<? php   echo   base _ url ();   ?>">　</ head >　< body >　　< h 1 > 増田 チャット </ h 1 >　　< h 2 > 削除 </ h 2 >　　< p > 以下 の メッセージ を 削除 し ます か ？</ p >　　< form   action =" welcome / delete "   method =" post "   accept - charset =" utf - 8 ">　　　<? php   if   ( isset ($ talk )):   ?>　　　< p   style =" background - color : lightpink "><? php   echo   $ talk [' message '];   ?></ p >　　　< input   type =" hidden "   name =" id "   value ="<? php   echo   $ talk [' id '];   ?>">　　　< input   type =" hidden "   name =" action "   value =" delete ">　　　<? php   else :   ?>　　　< p >※ 該当 する メッセージ が あり ませ ん 。 （ または 削除 済 です 。 ）</ p >　　　<? php   endif ;?>　　　< button > 削除 する </ button >　　</ form >　　< p >< a   href =" welcome / index "> 戻る </ a ></ p >　</ body ></ html >　 Model の 作成 設置 する フォルダ ： 　 C :\ xampp \ htdocs \ waf \ application \ models 設置 する ファイル ： 　 Chat _ model . php 上記 フォルダ の 中 に 「 Chat _ model . php 」 という ファイル を 作っ て 、 内容 を 以下 の よう に し ます 。 <? phpdefined (' BASEPATH ')   or   exit (' No   direct   script   access   allowed ');　 class   Chat _ model   extends   CI _ Model {　 public   function   __ construct ()　{　　 parent ::__ construct ();　　$ this -> load -> database ();　}　　//   Create 　 public   function   create _ message ($ message   =   '')　{　　$ sql   =   " INSERT   INTO   talk   SET   create _ at   =   ?   ,   message   =   ?";　　$ param   =   array ( date (' Y - m - d   H : i : s '),   $ message );　　$ this -> db -> query ($ sql ,   $ param );　　 return   $ this -> db -> insert _ id ();　}　　//   Read   All 　 public   function   read _ message ()　{　　$ sql   =   " SELECT   *   FROM   talk ";　　$ query   =   $ this -> db -> query ($ sql );　　 return   $ query -> result _ array ();　}　　//   Read   by   Id 　 public   function   read _ message _ by _ id ($ id   =   0 )　{　　$ sql   =   " SELECT   *   FROM   talk   WHERE   id   =   ?";　　$ param   =   array ($ id );　　$ query   =   $ this -> db -> query ($ sql ,   $ param );　　 return   $ query -> row _ array ();　}　　//   Update 　 public   function   update _ message ($ id   =   0 ,   $ message   =   '')　{　　$ sql   =   " UPDATE   talk   SET   message   =   ?   WHERE   id   =   ?";　　$ param   =   array ($ message ,   $ id );　　$ this -> db -> query ($ sql ,   $ param );　　 return   $ this -> db -> affected _ rows ();　}　　//   Delete 　 public   function   delete _ message ($ id   =   0 )　{　　$ sql   =   " DELETE   FROM   talk   WHERE   id   =   ?";　　$ param   =   array ($ id );　　$ this -> db -> query ($ sql ,   $ param );　　 return   $ this -> db -> affected _ rows ();　}}　 この 続き は 、 「 anond : 20181101230220 　 増田 式 プログラマー 養成 講座 　 その 16 　 Web アプリ の 完成 見本 （ 続き ） 」 へ 続き ます 。 